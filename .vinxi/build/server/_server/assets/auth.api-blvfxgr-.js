import{eq as c}from"drizzle-orm";import{c as t,j as i,a as u,U as d,d as l,u as s}from"./auth.schema-C-QPdDIq.js";import{a,c as n}from"./index-HNgfQz2a.js";import{g as _}from"./server-De-CGB3V.js";const S=n("src_services_auth_api_ts--getUserSession_createServerFn_handler","/_server",(r,e)=>o.__executeServer(r,e)),o=a({method:"GET"}).handler(S,async()=>{console.log("getUserSession called");const r=_();if(!r?.headers)return null;const e=await u.api.getSession({headers:r.headers});return console.log("User session:",e?.user.name),e}),h=t({type:"function"}).server(async({next:r})=>{const e=await o();return r({context:{userSession:e}})}),m=t({type:"function"}).middleware([h]).server(async({next:r,context:e})=>{if(!e.userSession)throw i({message:"You must be logged in to do that!"},{status:401});return r({context:{userSession:e.userSession}})}),p=n("src_services_auth_api_ts--updateUser_createServerFn_handler","/_server",(r,e)=>v.__executeServer(r,e)),v=a().validator(d).middleware([m]).handler(p,async({data:r,context:{userSession:e}})=>{await l.update(s).set({name:r.username}).where(c(s.id,e.user.id))});export{h as a,m as u};

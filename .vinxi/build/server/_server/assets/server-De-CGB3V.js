import{isPlainObject as S,isRedirect as N,isNotFound as A}from"@tanstack/router-core";import{AsyncLocalStorage as M}from"node:async_hooks";import{H3Event as E,getRequestURL as P,getRequestWebStream as W,setResponseStatus as J,getResponseStatus as B,eventHandler as K}from"h3";var V="Invariant failed";function G(e,t){if(!e)throw new Error(V)}const l={stringify:e=>JSON.stringify(e,function(r,n){const o=this[r],a=w.find(s=>s.stringifyCondition(o));return a?a.stringify(o):n}),parse:e=>JSON.parse(e,function(r,n){const o=this[r];if(S(o)){const a=w.find(s=>s.parseCondition(o));if(a)return a.parse(o)}return n}),encode:e=>{if(Array.isArray(e))return e.map(r=>l.encode(r));if(S(e))return Object.fromEntries(Object.entries(e).map(([r,n])=>[r,l.encode(n)]));const t=w.find(r=>r.stringifyCondition(e));return t?t.stringify(e):e},decode:e=>{if(S(e)){const t=w.find(r=>r.parseCondition(e));if(t)return t.parse(e)}return Array.isArray(e)?e.map(t=>l.decode(t)):S(e)?Object.fromEntries(Object.entries(e).map(([t,r])=>[t,l.decode(r)])):e}},m=(e,t,r,n)=>({key:e,stringifyCondition:t,stringify:o=>({[`$${e}`]:r(o)}),parseCondition:o=>Object.hasOwn(o,`$${e}`),parse:o=>n(o[`$${e}`])}),w=[m("undefined",e=>e===void 0,()=>0,()=>{}),m("date",e=>e instanceof Date,e=>e.toISOString(),e=>new Date(e)),m("error",e=>e instanceof Error,e=>({...e,message:e.message,stack:void 0,cause:e.cause}),e=>Object.assign(new Error(e.message),e)),m("formData",e=>e instanceof FormData,e=>{const t={};return e.forEach((r,n)=>{const o=t[n];o!==void 0?Array.isArray(o)?o.push(r):t[n]=[o,r]:t[n]=r}),t},e=>{const t=new FormData;return Object.entries(e).forEach(([r,n])=>{Array.isArray(n)?n.forEach(o=>t.append(r,o)):t.append(r,n)}),t}),m("bigint",e=>typeof e=="bigint",e=>e.toString(),e=>BigInt(e))];function Q(e={}){let t,r=!1;const n=s=>{if(t&&t!==s)throw new Error("Context conflict")};let o;if(e.asyncContext){const s=e.AsyncLocalStorage||globalThis.AsyncLocalStorage;s?o=new s:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const a=()=>{if(o){const s=o.getStore();if(s!==void 0)return s}return t};return{use:()=>{const s=a();if(s===void 0)throw new Error("Context is not available");return s},tryUse:()=>a(),set:(s,c)=>{c||n(s),t=s,r=!0},unset:()=>{t=void 0,r=!1},call:(s,c)=>{n(s),t=s;try{return o?o.run(s,c):c()}finally{r||(t=void 0)}},async callAsync(s,c){t=s;const g=()=>{t=s},u=()=>t===s?g:void 0;L.add(u);try{const d=o?o.run(s,c):c();return r||(t=void 0),await d}finally{L.delete(u)}}}}function X(e={}){const t={};return{get(r,n={}){return t[r]||(t[r]=Q({...e,...n})),t[r]}}}const F=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},O="__unctx__",Y=F[O]||(F[O]=X()),Z=(e,t={})=>Y.get(e,t),q="__unctx_async_handlers__",L=F[q]||(F[q]=new Set);function k(e){let t;const r=U(e),n={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(r,{...n,body:e.node.req.body}):new Request(r,{...n,get body(){return t||(t=ne(e),t)}})}function j(e){return e.web??(e.web={request:k(e),url:U(e)}),e.web.request}function ee(){return D()}const I=Symbol("$HTTPEvent");function te(e){return typeof e=="object"&&(e instanceof E||e?.[I]instanceof E||e?.__is_event__===!0)}function _(e){return function(...t){var r;const n=t[0];if(te(n))t[0]=n instanceof E||n.__is_event__?n:n[I];else{if(!((r=globalThis.app.config.server.experimental)!=null&&r.asyncContext))throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");t.unshift(ee())}return e(...t)}}const U=_(P),de=_(J),re=_(B),ne=_(W),pe=_(j);function oe(){var e;return Z("nitro-app",{asyncContext:!!((e=globalThis.app.config.server.experimental)!=null&&e.asyncContext),AsyncLocalStorage:M})}function D(){const e=oe().use().event;if(!e)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");return e}const se={"src_services_auth_api_ts--getUserSession_createServerFn_handler":{functionName:"getUserSession_createServerFn_handler",importer:()=>import("./auth.api-IrAclgzC.js")},"src_services_auth_api_ts--updateUser_createServerFn_handler":{functionName:"updateUser_createServerFn_handler",importer:()=>import("./auth.api-IrAclgzC.js")},"src_services_community_api_ts--createCommunity_createServerFn_handler":{functionName:"createCommunity_createServerFn_handler",importer:()=>import("./community.api-Dnoe55V7.js")},"src_services_community_api_ts--getCommunities_createServerFn_handler":{functionName:"getCommunities_createServerFn_handler",importer:()=>import("./community.api-Dnoe55V7.js")},"src_services_community_api_ts--getCommunity_createServerFn_handler":{functionName:"getCommunity_createServerFn_handler",importer:()=>import("./community.api-Dnoe55V7.js")},"src_services_community_api_ts--joinCommunity_createServerFn_handler":{functionName:"joinCommunity_createServerFn_handler",importer:()=>import("./community.api-Dnoe55V7.js")},"src_services_community_api_ts--leaveCommunity_createServerFn_handler":{functionName:"leaveCommunity_createServerFn_handler",importer:()=>import("./community.api-Dnoe55V7.js")},"src_services_community_api_ts--updateCommunity_createServerFn_handler":{functionName:"updateCommunity_createServerFn_handler",importer:()=>import("./community.api-Dnoe55V7.js")},"src_services_community_api_ts--getUserRoleInCommunity_createServerFn_handler":{functionName:"getUserRoleInCommunity_createServerFn_handler",importer:()=>import("./community.api-Dnoe55V7.js")},"src_services_event_api_ts--getEvents_createServerFn_handler":{functionName:"getEvents_createServerFn_handler",importer:()=>import("./event.api-BsouMevw.js")},"src_services_event_api_ts--getEvent_createServerFn_handler":{functionName:"getEvent_createServerFn_handler",importer:()=>import("./event.api-BsouMevw.js")},"src_services_event_api_ts--upsertEvent_createServerFn_handler":{functionName:"upsertEvent_createServerFn_handler",importer:()=>import("./event.api-BsouMevw.js")},"src_services_tags_api_ts--getTags_createServerFn_handler":{functionName:"getTags_createServerFn_handler",importer:()=>import("./tags.api-2xqpBZuT.js")}},me=K(ie),C=se;async function ie(e){const t=j(e);return await ce({request:t,event:e})}function ae(e){return e.replace(/^\/|\/$/g,"")}async function ce({request:e,event:t}){const r=new AbortController,n=r.signal,o=()=>r.abort();t.node.req.on("close",o);const a=e.method,s=new URL(e.url,"http://localhost:3000"),c=new RegExp(`${ae("/_server")}/([^/?#]+)`),g=s.pathname.match(c),u=g?g[1]:null,d=Object.fromEntries(s.searchParams.entries()),b="createServerFn"in d,H="raw"in d;if(typeof u!="string")throw new Error("Invalid server action param for serverFnId: "+u);const R=C[u];if(!R)throw console.log("serverFnManifest",C),new Error("Server function info not found for "+u);let y;if(y=await R.importer(),!y)throw console.log("serverFnManifest",C),new Error("Server function module not resolved for "+u);const p=y[R.functionName];if(!p)throw console.log("serverFnManifest",C),console.log("fnModule",y),new Error(`Server function module export not resolved for serverFn ID: ${u}`);const z=["multipart/form-data","application/x-www-form-urlencoded"],h=await(async()=>{try{let i=await(async()=>{if(e.headers.get("Content-Type")&&z.some(f=>{var T;return(T=e.headers.get("Content-Type"))==null?void 0:T.includes(f)}))return G(a.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await p(await e.formData(),n);if(a.toLowerCase()==="get"){let f=d;return b&&(f=d.payload),f=f&&l.parse(f),await p(f,n)}const v=await e.text(),x=l.parse(v);return b?await p(x,n):await p(...x,n)})();return i.result instanceof Response?i.result:!b&&(i=i.result,i instanceof Response)?i:N(i)||A(i)?$(i):new Response(i!==void 0?l.stringify(i):void 0,{status:re(D()),headers:{"Content-Type":"application/json"}})}catch(i){return i instanceof Response?i:N(i)||A(i)?$(i):(console.info(),console.info("Server Fn Error!"),console.info(),console.error(i),console.info(),new Response(l.stringify(i),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(t.node.req.removeListener("close",o),H)return h;if(h.headers.get("Content-Type")==="application/json"){const v=await h.clone().text();v&&JSON.stringify(JSON.parse(v))}return h}function $(e){const{headers:t,...r}=e;return new Response(JSON.stringify(r),{status:200,headers:{"Content-Type":"application/json",...t||{}}})}export{l as a,me as b,pe as g,G as i,de as s};
